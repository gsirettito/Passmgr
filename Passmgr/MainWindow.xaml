<Window x:Class="Passmgr.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Passmgr"
        xmlns:stt="clr-namespace:SiretT.Controls"
        xmlns:sttc="clr-namespace:SiretT.Converters"
        mc:Ignorable="d"
        Title="Password generator" Height="500" Width="300"
        BorderBrush="#FFF5CC84"
        ResizeMode="CanMinimize">
    <Window.Resources>
        <sttc:LogicBooleanConverter x:Key="BooleanConverter"/>

        <Style TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFF5D498"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="back"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentControl x:Name="content"
                                            Content="{TemplateBinding Content}"
                                            Foreground="{TemplateBinding Foreground}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="Background" Value="#FFF5CC84"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFF5D498"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="back" Property="Background" Value="#FFF5D498"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFF5D498"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="content" Property="Foreground" Value="#FFA8AEC3"/>
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFA8AEC3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="BorderBrush" Value="#FFD7E4FF"/>
            <Setter Property="Background" Value="#FFFCFCFC"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="back" BorderThickness="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Border x:Name="border"
                                        Width="14" Height="14"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True">
                                    <Grid>
                                        <Path x:Name="CheckIcon"
                                              Width="7.5"
                                              Height="6.9"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M48.4375,110.4375 L51.4995,112.812 L56.3745,107.24883"
                                              Opacity="0"
                                              Stretch="Fill"
                                              Stroke="#FFD2A85E"
                                              StrokeEndLineCap="Triangle"
                                              StrokeStartLineCap="Triangle"
                                              StrokeThickness="1.5" 
                                              SnapsToDevicePixels="True"/>
                                        <Rectangle x:Name="IndeterminateIcon"
                                                   Width="8"
                                                   Height="8"
                                                   Opacity="0"
                                                   Fill="#FFD2A85E" />
                                        <Rectangle x:Name="DisabledVisualElement"
                                                   Fill="#FFA8AEC3"
                                                   Opacity="0"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentControl Grid.Column="1"
                                            IsTabStop="False"
                                            Margin="2,0,0,0"
                                            Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  RecognizesAccessKey="True" />
                            </ContentControl>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.MouseOver.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="{DynamicResource Fluent.Ribbon.Brushes.CheckBox.Pressed.Stroke}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckIcon" Property="Opacity" Value="1" />
                                <Setter Property="Background" Value="#FFFFEDC8" />
                                <Setter Property="BorderBrush" Value="#FFD2A85E" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="IndeterminateIcon" Property="Opacity" Value="1" />
                                <Setter Property="BorderBrush" Value="#FFD2A85E" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="contentPresenter" Property="Opacity" Value=".55" />
                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value=".55" />
                                <Setter TargetName="IndeterminateIcon" Property="Fill" Value="#FFA8AEC3" />
                                <Setter TargetName="CheckIcon" Property="Stroke" Value="#FFA8AEC3" />
                                <Setter Property="BorderBrush" Value="#FFA8AEC3" />
                                <Setter Property="Background" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                <Setter TargetName="CheckIcon" Property="LayoutTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="stt:NumericBox">
            <Setter Property="BorderBrush" Value="#FFD7E4FF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="stt:NumericBox">
                        <Border x:Name="back"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="19"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="0" Content="{TemplateBinding Tag}" Padding="0"
                                   HorizontalContentAlignment="Center"/>
                                <Button Name="dn" Grid.Column="1" BorderThickness="0" Background="#FFF2F2F2" Padding="4"
                                    Command="{Binding DeleteCharacterCommand, RelativeSource={RelativeSource AncestorType=stt:NumericBox}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=stt:NumericBox}}">
                                    <Path Data="M4.5 9 0 4.5 4.5 0" StrokeThickness="1" Stroke="#FF949494" Stretch="Uniform"/>
                                </Button>
                                <ScrollViewer x:Name="PART_ContentHost" Grid.Column="2" Background="White"/>
                                <Button Name="up" Grid.Column="3" BorderThickness="0" Background="#FFF2F2F2" Padding="4"
                                    Command="{Binding AddCharacterCommand, RelativeSource={RelativeSource AncestorType=stt:NumericBox}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=stt:NumericBox}}">
                                    <Path Data="M0 9 L 4.5 4.5 L 0 0" StrokeThickness="1" Stroke="#FF949494" Stretch="Uniform"/>
                                </Button>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="up" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_ContentHost" Property="Background" Value="Azure"/>
                            </Trigger>
                            <Trigger SourceName="dn" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_ContentHost" Property="Background" Value="Azure"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="back" Property="BorderBrush" Value="#FFE5C365"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel>
            <Button x:Name="gen_btn" Margin="10" Padding="10,2" Click="generate_Click">
                <Button.IsEnabled>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <sttc:LogicBooleanConverter LogicOperator="OR"/>
                        </MultiBinding.Converter>
                        <Binding Path="IsChecked" ElementName="mayuscule"/>
                        <Binding Path="IsChecked" ElementName="minuscule"/>
                        <Binding Path="IsChecked" ElementName="digits"/>
                        <Binding Path="IsChecked" ElementName="special"/>
                    </MultiBinding>
                </Button.IsEnabled>
                    Generate
            </Button>
            <TextBlock x:Name="text" Margin="10,0"
                       TextAlignment="Center"
                       FontSize="20"
                       FontWeight="Bold"
                       FontFamily="Consolas"
                       TextTrimming="CharacterEllipsis">[A-Za-z0-9].</TextBlock>
            <Button x:Name="copy_btn" HorizontalAlignment="Center" Margin="10,5" Padding="10,2" Click="copy_Click">Copy</Button>
            <Separator Margin="1,5,1,0" Background="#FFD7E4FF"/>
            <Image x:Name="qrImage" Margin="10,5" Width="180" Height="180"/>
            <Separator Margin="1,0,1,10" Background="#FFD7E4FF"/>
            <BulletDecorator Margin="10,2">
                <BulletDecorator.Bullet>
                    <TextBlock>Lenght:</TextBlock>
                </BulletDecorator.Bullet>
                <stt:NumericBox x:Name="lenghtBox" NumType="IntType"
                                Maximum="99" Minimum="4"
                                HorizontalAlignment="Left"
                                Margin="5,0" Value="12"></stt:NumericBox>
            </BulletDecorator>
            <Separator Margin="3,10" Background="#FFD7E4FF"/>
            <CheckBox x:Name="mayuscule" Margin="10,2" IsChecked="True">Mayuscule (A-Z)</CheckBox>
            <CheckBox x:Name="minuscule" Margin="10,2" IsChecked="True">Minuscule (a-z)</CheckBox>
            <CheckBox x:Name="digits" Margin="10,2" IsChecked="True">Digits (0-9)</CheckBox>
            <CheckBox x:Name="special" Margin="10,2" IsChecked="True">
                <TextBox x:Name="specials"
                         IsEnabled="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=CheckBox}}"
                         Text="~!@#$%^&amp;*+-/.,\{}[]();:|?&lt;&gt;=&quot;`"></TextBox>
            </CheckBox>
        </StackPanel>
    </Grid>
</Window>
